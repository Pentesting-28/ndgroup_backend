 toastr.options = {      "closeButton": true,      "debug": false,      "newestOnTop": false,      "progressBar": false,      "positionClass": "toast-top-right",      "preventDuplicates": true,      "onclick": null,      "showDuration": "300",      "hideDuration": "1000",      "timeOut": "5000",      "extendedTimeOut": "1000",      "showEasing": "swing",      "hideEasing": "linear",      "showMethod": "fadeIn",      "hideMethod": "fadeOut"    }$(function ($) {  $('input[type="file"]').change(function() {     readURL(this);  });  function readURL(input) {   var id = $(input).attr("id");   var active = $(input).parent().parent().addClass(id);    if (input.files && input.files[0]) {    var reader = new FileReader();        reader.onload = function(e) {           // Asignamos el atributo src a la tag de imagen         $('.'+id+' .preview').attr('src', e.target.result); //preview dinamico    }    reader.readAsDataURL(input.files[0]);    }  }  $("#properti").stringToSlug({        callback: function(text){            $('#url').val(text);        }    }); $('#message_email').modal('toggle');   var forms = document.getElementsByClassName('needs-validation');    var validation = Array.prototype.filter.call(forms, function(form) {      form.addEventListener('submit', function(event) {        if (form.checkValidity() === false) {          event.preventDefault();          event.stopPropagation();        }        form.classList.add('was-validated');      }, false);    });  //Validacion solo numericos en inputs  $('.phone').on('input', function () {     this.value = this.value.replace(/[^0-9]/g,'');  });    //Validacion solo letras en inputs    $("#properti").keypress(function (key) {    if ((key.charCode < 97 || key.charCode > 122) //letras mayusculas      && (key.charCode < 65 || key.charCode > 90) //letras minusculas      && (key.charCode != 45) //retroceso      && (key.charCode != 241) //ñ      && (key.charCode != 209) //Ñ      && (key.charCode != 32) //espacio      && (key.charCode != 225) //á      && (key.charCode != 233) //é      && (key.charCode != 237) //í      && (key.charCode != 243) //ó      && (key.charCode != 250) //ú      && (key.charCode != 193) //Á      && (key.charCode != 201) //É      && (key.charCode != 205) //Í      && (key.charCode != 211) //Ó      && (key.charCode != 218) //Ú      )      return false;  });    $("#menu_f").click(function(){    $('#menu_item, .m_bg').toggleClass('active');         });function isValidEmail(mail) {       return /^\w+([\.\+\-]?\w+)*@\w+([\.-]?\w+)*(\.\w{2,4})+$/.test(mail);     }   $("#content").keypress(function (key) {      let i = $(this).val().length+1;      let x = i--;      let item = $("#score");            item.html(`<div> ${i} / 180 </div> `);        if( i >= 180 ){          item.html(`<div style="display:block" class="invalid-feedback"> ${i} / 180 Excede al número de caracteres </div>`);                     }        });  $.fn.countTo = function(options) {    // merge the default plugin settings with the custom options   Backspace    options = $.extend({}, $.fn.countTo.defaults, options || {});    // how many times to update the value, and how much to increment the value on each update    var loops = Math.ceil(options.speed / options.refreshInterval),      increment = (options.to - options.from) / loops;    return $(this).each(function() {      var _this = this,        loopCount = 0,        value = options.from,        interval = setInterval(updateTimer, options.refreshInterval);      function updateTimer() {        value += increment;        loopCount++;        $(_this).html(value.toFixed(options.decimals));        if (typeof(options.onUpdate) == 'function') {          options.onUpdate.call(_this, value);        }        if (loopCount >= loops) {          clearInterval(interval);          value = options.to;          if (typeof(options.onComplete) == 'function') {            options.onComplete.call(_this, value);          }        }      }    });  };  $.fn.countTo.defaults = {    from: 0, // the number the element should start at    to: 100, // the number the element should end at    speed: 1000, // how long it should take to count between the target numbers    refreshInterval: 100, // how often the element should be updated    decimals: 0, // the number of decimal places to show    onUpdate: null, // callback method for every time the element is updated,    onComplete: null, // callback method for when the element finishes updating  };  $('.timer_l').countTo({        from: 0,    to: 250,    speed: 2000,    refreshInterval: 50,    onComplete: function(value) {      //console.debug(this);    }  });  $('.timer_v').countTo({      from: 0,    to: 190,    speed: 2000,    refreshInterval: 50,    onComplete: function(value) {      //console.debug(this);    }  });  $('.timer_c').countTo({       from: 0,    to: 100,    speed: 2000,    refreshInterval: 50,    onComplete: function(value) {     //console.debug(this);    }  });  $("a.logout").click(function(e){      e.preventDefault();      $('#logout-form').submit();  });  //CRUD delete  $("#btnD").click(function(){      $("#deleteF").submit();  });//Search box ndgrup.mx  $("#keywords").autocomplete({      source: function(request,response){        $.ajax({            url:"/Submit-listing/search",            dataType: "json",            data:{              term: request.term            },            success: function(data){                response(data)            }        });      }    });}); 